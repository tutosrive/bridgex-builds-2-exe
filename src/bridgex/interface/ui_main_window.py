# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'main_window.ui'
##
## Created by: Qt User Interface Compiler version 6.9.0
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QLocale, QMetaObject, QRect, QSize, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QCursor, QFont, QIcon, QPalette)
from PySide6.QtWidgets import (QFrame, QGridLayout, QLabel,
    QLayout, QMainWindow, QMenu, QMenuBar, QPushButton, QSizePolicy, QTextEdit, QWidget)
from . import resources_rc

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.setWindowModality(Qt.WindowModality.NonModal)
        MainWindow.setEnabled(True)
        MainWindow.resize(931, 634)
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMaximumSize(QSize(16777215, 16777215))
        palette = QPalette()
        brush = QBrush(QColor(255, 255, 255, 255))
        brush.setStyle(Qt.BrushStyle.SolidPattern)
        palette.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.WindowText, brush)
        brush1 = QBrush(QColor(33, 33, 33, 255))
        brush1.setStyle(Qt.BrushStyle.SolidPattern)
        palette.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Button, brush1)
        palette.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Text, brush)
        palette.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.ButtonText, brush)
        palette.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Base, brush1)
        palette.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Window, brush1)
        brush2 = QBrush(QColor(63, 63, 63, 255))
        brush2.setStyle(Qt.BrushStyle.SolidPattern)
        palette.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.AlternateBase, brush2)
        brush3 = QBrush(QColor(255, 255, 255, 128))
        brush3.setStyle(Qt.BrushStyle.SolidPattern)
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.PlaceholderText, brush3)
#endif
        palette.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.WindowText, brush)
        palette.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Button, brush1)
        palette.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Text, brush)
        brush4 = QBrush(QColor(134, 134, 134, 255))
        brush4.setStyle(Qt.BrushStyle.SolidPattern)
        palette.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.ButtonText, brush4)
        palette.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Base, brush1)
        palette.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Window, brush1)
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.PlaceholderText, brush3)
#endif
        palette.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.WindowText, brush)
        palette.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Button, brush1)
        palette.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Text, brush)
        palette.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.ButtonText, brush)
        palette.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Base, brush1)
        palette.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Window, brush1)
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.PlaceholderText, brush3)
#endif
        MainWindow.setPalette(palette)
        font = QFont()
        font.setFamilies([u"Gabriola"])
        font.setPointSize(12)
        MainWindow.setFont(font)
        icon = QIcon()
        icon.addFile(u":/img/logo-bridgex-2", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setLocale(QLocale(QLocale.English, QLocale.UnitedKingdom))
        MainWindow.setDocumentMode(True)
        MainWindow.setDockOptions(QMainWindow.DockOption.AllowTabbedDocks|QMainWindow.DockOption.AnimatedDocks)
        self.action_open_file = QAction(MainWindow)
        self.action_open_file.setObjectName(u"action_open_file")
        self.action_open_file.setCheckable(False)
        icon1 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.DocumentOpen))
        self.action_open_file.setIcon(icon1)
        self.action_open_file.setFont(font)
        self.action_open_file.setMenuRole(QAction.MenuRole.TextHeuristicRole)
        self.action_exit = QAction(MainWindow)
        self.action_exit.setObjectName(u"action_exit")
        icon2 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.ApplicationExit))
        self.action_exit.setIcon(icon2)
        self.action_exit.setFont(font)
        self.action_exit.setMenuRole(QAction.MenuRole.TextHeuristicRole)
        self.action_about = QAction(MainWindow)
        self.action_about.setObjectName(u"action_about")
        self.action_about.setIcon(icon)
        self.action_about.setFont(font)
        self.action_language = QAction(MainWindow)
        self.action_language.setObjectName(u"action_language")
        icon3 = QIcon(QIcon.fromTheme(u"accessories-character-map"))
        self.action_language.setIcon(icon3)
        self.action_theme = QAction(MainWindow)
        self.action_theme.setObjectName(u"action_theme")
        self.action_theme.setEnabled(False)
        icon4 = QIcon(QIcon.fromTheme(u"weather-clear"))
        self.action_theme.setIcon(icon4)
        font1 = QFont()
        font1.setFamilies([u"Amiri Quran"])
        self.action_theme.setFont(font1)
        self.action_OSL = QAction(MainWindow)
        self.action_OSL.setObjectName(u"action_OSL")
        icon5 = QIcon()
        icon5.addFile(u":/icons/osl_icon", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.action_OSL.setIcon(icon5)
        self.action_OSL.setFont(font)
        self.main_window_frame = QWidget(MainWindow)
        self.main_window_frame.setObjectName(u"main_window_frame")
        self.main_window_frame.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.gridLayout_4 = QGridLayout(self.main_window_frame)
        self.gridLayout_4.setObjectName(u"gridLayout_4")
        self.side_bar = QFrame(self.main_window_frame)
        self.side_bar.setObjectName(u"side_bar")
        sizePolicy1 = QSizePolicy(QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Preferred)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.side_bar.sizePolicy().hasHeightForWidth())
        self.side_bar.setSizePolicy(sizePolicy1)
        self.side_bar.setMinimumSize(QSize(40, 0))
        self.side_bar.setMaximumSize(QSize(16777215, 200))
        self.side_bar.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.side_bar.setFrameShape(QFrame.Shape.NoFrame)
        self.side_bar.setFrameShadow(QFrame.Shadow.Raised)
        self.sidebar_layout = QGridLayout(self.side_bar)
        self.sidebar_layout.setObjectName(u"sidebar_layout")
        self.sidebar_layout.setVerticalSpacing(0)
        self.sidebar_layout.setContentsMargins(0, 0, 0, 0)
        self.language_btn = QPushButton(self.side_bar)
        self.language_btn.setObjectName(u"language_btn")
        self.language_btn.setMinimumSize(QSize(20, 70))
        self.language_btn.setFont(font)
        self.language_btn.setIcon(icon3)
        self.language_btn.setFlat(False)

        self.sidebar_layout.addWidget(self.language_btn, 1, 0, 1, 1)

        self.explorer_btn = QPushButton(self.side_bar)
        self.explorer_btn.setObjectName(u"explorer_btn")
        self.explorer_btn.setMinimumSize(QSize(20, 70))
        self.explorer_btn.setFont(font)
        self.explorer_btn.setIcon(icon1)
#if QT_CONFIG(shortcut)
        self.explorer_btn.setShortcut(u"")
#endif // QT_CONFIG(shortcut)
        self.explorer_btn.setFlat(False)

        self.sidebar_layout.addWidget(self.explorer_btn, 0, 0, 1, 1)


        self.gridLayout_4.addWidget(self.side_bar, 0, 1, 1, 1)

        self.frame_widgets = QFrame(self.main_window_frame)
        self.frame_widgets.setObjectName(u"frame_widgets")
        self.frame_widgets.setEnabled(True)
        sizePolicy.setHeightForWidth(self.frame_widgets.sizePolicy().hasHeightForWidth())
        self.frame_widgets.setSizePolicy(sizePolicy)
#if QT_CONFIG(tooltip)
        self.frame_widgets.setToolTip(u"")
#endif // QT_CONFIG(tooltip)
        self.frame_widgets.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.frame_widgets.setAutoFillBackground(False)
        self.frame_widgets.setFrameShape(QFrame.Shape.NoFrame)
        self.frame_widgets.setFrameShadow(QFrame.Shadow.Raised)
        self.frame_widgets_layout = QGridLayout(self.frame_widgets)
        self.frame_widgets_layout.setSpacing(0)
        self.frame_widgets_layout.setObjectName(u"frame_widgets_layout")
        self.frame_widgets_layout.setContentsMargins(0, 0, 0, 0)
        self.container_body = QGridLayout()
        self.container_body.setObjectName(u"container_body")
        self.frame_views = QFrame(self.frame_widgets)
        self.frame_views.setObjectName(u"frame_views")
        self.frame_views.setFrameShape(QFrame.Shape.StyledPanel)
        self.frame_views.setFrameShadow(QFrame.Shadow.Raised)
        self.frame_views_layout = QGridLayout(self.frame_views)
        self.frame_views_layout.setSpacing(0)
        self.frame_views_layout.setObjectName(u"frame_views_layout")
        self.frame_views_layout.setContentsMargins(0, 0, 0, 0)
        self.grid_views_layout = QGridLayout()
        self.grid_views_layout.setObjectName(u"grid_views_layout")
        self.info_md = QLabel(self.frame_views)
        self.info_md.setObjectName(u"info_md")
        font2 = QFont()
        font2.setFamilies([u"Gabriola"])
        font2.setPointSize(14)
        font2.setStrikeOut(False)
        font2.setKerning(True)
        self.info_md.setFont(font2)
        self.info_md.setStyleSheet(u"")
        self.info_md.setTextFormat(Qt.TextFormat.PlainText)
        self.info_md.setAlignment(Qt.AlignmentFlag.AlignCenter)

        self.grid_views_layout.addWidget(self.info_md, 0, 1, 1, 1)

        self.text_file_selected = QTextEdit(self.frame_views)
        self.text_file_selected.setObjectName(u"text_file_selected")
        self.text_file_selected.setEnabled(True)
        sizePolicy2 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.text_file_selected.sizePolicy().hasHeightForWidth())
        self.text_file_selected.setSizePolicy(sizePolicy2)
        self.text_file_selected.setSizeIncrement(QSize(0, 0))
        font3 = QFont()
        font3.setFamilies([u"Times New Roman"])
        font3.setPointSize(12)
        self.text_file_selected.setFont(font3)
        self.text_file_selected.setFocusPolicy(Qt.FocusPolicy.StrongFocus)
        self.text_file_selected.setAutoFillBackground(True)
        self.text_file_selected.setReadOnly(False)
        self.text_file_selected.setMarkdown(u"")
        self.text_file_selected.setPlaceholderText(u"")

        self.grid_views_layout.addWidget(self.text_file_selected, 1, 1, 1, 1)

        self.info_preview = QLabel(self.frame_views)
        self.info_preview.setObjectName(u"info_preview")
        font4 = QFont()
        font4.setFamilies([u"Gabriola"])
        font4.setPointSize(14)
        self.info_preview.setFont(font4)
        self.info_preview.setTextFormat(Qt.TextFormat.PlainText)
        self.info_preview.setAlignment(Qt.AlignmentFlag.AlignCenter)

        self.grid_views_layout.addWidget(self.info_preview, 0, 2, 1, 1)

        self.text_preview_mode = QTextEdit(self.frame_views)
        self.text_preview_mode.setObjectName(u"text_preview_mode")
        self.text_preview_mode.setFont(font3)
        self.text_preview_mode.setFocusPolicy(Qt.FocusPolicy.NoFocus)
        self.text_preview_mode.setAutoFormatting(QTextEdit.AutoFormattingFlag.AutoAll)
        self.text_preview_mode.setReadOnly(True)
        self.text_preview_mode.setMarkdown(u"")
        self.text_preview_mode.setHtml(u"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:'Times New Roman'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Gabriola';\"><br /></p></body></html>")
        self.text_preview_mode.setTextInteractionFlags(Qt.TextInteractionFlag.LinksAccessibleByMouse|Qt.TextInteractionFlag.TextSelectableByMouse)

        self.grid_views_layout.addWidget(self.text_preview_mode, 1, 2, 1, 1)


        self.frame_views_layout.addLayout(self.grid_views_layout, 0, 0, 1, 1)

        self.convert_btn = QPushButton(self.frame_views)
        self.convert_btn.setObjectName(u"convert_btn")
        self.convert_btn.setMinimumSize(QSize(0, 40))
        self.convert_btn.setCursor(QCursor(Qt.CursorShape.PointingHandCursor))
        self.convert_btn.setAutoFillBackground(False)
        icon6 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.SyncSynchronizing))
        self.convert_btn.setIcon(icon6)

        self.frame_views_layout.addWidget(self.convert_btn, 1, 0, 1, 1)


        self.container_body.addWidget(self.frame_views, 0, 0, 1, 1)


        self.frame_widgets_layout.addLayout(self.container_body, 0, 1, 1, 1)


        self.gridLayout_4.addWidget(self.frame_widgets, 0, 2, 1, 1)

        self.footer = QFrame(self.main_window_frame)
        self.footer.setObjectName(u"footer")
        self.footer.setMaximumSize(QSize(16777215, 20))
        self.footer.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.footer.setFrameShape(QFrame.Shape.NoFrame)
        self.footer.setFrameShadow(QFrame.Shadow.Raised)
        self.footer.setLineWidth(0)
        self.footer_layout = QGridLayout(self.footer)
        self.footer_layout.setSpacing(0)
        self.footer_layout.setObjectName(u"footer_layout")
        self.footer_layout.setSizeConstraint(QLayout.SizeConstraint.SetDefaultConstraint)
        self.footer_layout.setContentsMargins(0, 0, 0, 0)
        self.label = QLabel(self.footer)
        self.label.setObjectName(u"label")
        self.label.setMaximumSize(QSize(16777215, 20))
        self.label.setBaseSize(QSize(855, 60))
        self.label.setTextFormat(Qt.TextFormat.RichText)
        self.label.setScaledContents(True)
        self.label.setAlignment(Qt.AlignmentFlag.AlignBottom|Qt.AlignmentFlag.AlignHCenter)
        self.label.setOpenExternalLinks(True)

        self.footer_layout.addWidget(self.label, 0, 0, 1, 1)


        self.gridLayout_4.addWidget(self.footer, 1, 2, 1, 1)

        MainWindow.setCentralWidget(self.main_window_frame)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setEnabled(True)
        self.menubar.setGeometry(QRect(0, 0, 931, 27))
        palette1 = QPalette()
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.WindowText, brush)
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Button, brush1)
        brush5 = QBrush(QColor(43, 43, 43, 255))
        brush5.setStyle(Qt.BrushStyle.SolidPattern)
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Light, brush5)
        brush6 = QBrush(QColor(36, 36, 36, 255))
        brush6.setStyle(Qt.BrushStyle.SolidPattern)
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Midlight, brush6)
        brush7 = QBrush(QColor(14, 14, 14, 255))
        brush7.setStyle(Qt.BrushStyle.SolidPattern)
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Dark, brush7)
        brush8 = QBrush(QColor(19, 19, 19, 255))
        brush8.setStyle(Qt.BrushStyle.SolidPattern)
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Mid, brush8)
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Text, brush)
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.BrightText, brush)
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.ButtonText, brush)
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Base, brush1)
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Window, brush1)
        brush9 = QBrush(QColor(0, 0, 0, 255))
        brush9.setStyle(Qt.BrushStyle.SolidPattern)
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Shadow, brush9)
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.AlternateBase, brush7)
        brush10 = QBrush(QColor(255, 255, 220, 255))
        brush10.setStyle(Qt.BrushStyle.SolidPattern)
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.ToolTipBase, brush10)
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.ToolTipText, brush9)
        brush11 = QBrush(QColor(255, 255, 255, 127))
        brush11.setStyle(Qt.BrushStyle.SolidPattern)
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.PlaceholderText, brush11)
#endif
#if QT_VERSION >= QT_VERSION_CHECK(6, 6, 0)
        palette1.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Accent, brush9)
#endif
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.WindowText, brush)
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Button, brush1)
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Light, brush5)
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Midlight, brush6)
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Dark, brush7)
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Mid, brush8)
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Text, brush)
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.BrightText, brush)
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.ButtonText, brush)
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Base, brush1)
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Window, brush1)
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Shadow, brush9)
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.AlternateBase, brush7)
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.ToolTipBase, brush10)
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.ToolTipText, brush9)
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.PlaceholderText, brush11)
#endif
#if QT_VERSION >= QT_VERSION_CHECK(6, 6, 0)
        palette1.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Accent, brush9)
#endif
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.WindowText, brush7)
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Button, brush1)
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Light, brush5)
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Midlight, brush6)
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Dark, brush7)
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Mid, brush8)
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Text, brush7)
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.BrightText, brush)
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.ButtonText, brush7)
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Base, brush1)
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Window, brush1)
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Shadow, brush9)
        brush12 = QBrush(QColor(29, 29, 29, 255))
        brush12.setStyle(Qt.BrushStyle.SolidPattern)
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.AlternateBase, brush12)
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.ToolTipBase, brush10)
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.ToolTipText, brush9)
        brush13 = QBrush(QColor(14, 14, 14, 127))
        brush13.setStyle(Qt.BrushStyle.SolidPattern)
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.PlaceholderText, brush13)
#endif
        brush14 = QBrush(QColor(20, 20, 20, 255))
        brush14.setStyle(Qt.BrushStyle.SolidPattern)
#if QT_VERSION >= QT_VERSION_CHECK(6, 6, 0)
        palette1.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Accent, brush14)
#endif
        self.menubar.setPalette(palette1)
        font5 = QFont()
        font5.setFamilies([u"Segoe Print"])
        font5.setPointSize(9)
        self.menubar.setFont(font5)
        self.menubar.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.menubar.setAutoFillBackground(False)
        self.menubar.setStyleSheet(u"QMenu:hover{color: red}")
        self.menu_qt = QMenu(self.menubar)
        self.menu_qt.setObjectName(u"menu_qt")
        self.menu_qt.setFont(font)
        self.menu_qt.setCursor(QCursor(Qt.CursorShape.PointingHandCursor))
        self.menu_qt.setTabletTracking(True)
        self.menu_qt.setTearOffEnabled(False)
        self.menu_qt.setToolTipsVisible(False)
        self.menu_settings = QMenu(self.menubar)
        self.menu_settings.setObjectName(u"menu_settings")
        palette2 = QPalette()
        palette2.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.WindowText, brush)
        palette2.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Button, brush1)
        brush15 = QBrush(QColor(34, 34, 103, 255))
        brush15.setStyle(Qt.BrushStyle.SolidPattern)
        palette2.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Mid, brush15)
        palette2.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Text, brush)
        palette2.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.ButtonText, brush)
        palette2.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Base, brush1)
        palette2.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.Window, brush1)
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette2.setBrush(QPalette.ColorGroup.Active, QPalette.ColorRole.PlaceholderText, brush3)
#endif
        palette2.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.WindowText, brush)
        palette2.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Button, brush1)
        palette2.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Text, brush)
        palette2.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.ButtonText, brush)
        palette2.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Base, brush1)
        palette2.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.Window, brush1)
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette2.setBrush(QPalette.ColorGroup.Inactive, QPalette.ColorRole.PlaceholderText, brush3)
#endif
        palette2.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.WindowText, brush)
        palette2.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Button, brush1)
        palette2.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Text, brush)
        palette2.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.ButtonText, brush)
        palette2.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Base, brush1)
        palette2.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.Window, brush1)
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette2.setBrush(QPalette.ColorGroup.Disabled, QPalette.ColorRole.PlaceholderText, brush3)
#endif
        self.menu_settings.setPalette(palette2)
        self.menu_help = QMenu(self.menubar)
        self.menu_help.setObjectName(u"menu_help")
        self.menu_help.setFont(font)
        self.menu_help.setFocusPolicy(Qt.FocusPolicy.ClickFocus)
        self.menu_help.setTearOffEnabled(False)
        self.menu_help.setSeparatorsCollapsible(False)
        self.menu_help.setToolTipsVisible(False)
        MainWindow.setMenuBar(self.menubar)

        self.menubar.addAction(self.menu_qt.menuAction())
        self.menubar.addAction(self.menu_settings.menuAction())
        self.menubar.addAction(self.menu_help.menuAction())
        self.menu_qt.addAction(self.action_open_file)
        self.menu_qt.addSeparator()
        self.menu_qt.addAction(self.action_exit)
        self.menu_settings.addAction(self.action_language)
        self.menu_settings.addAction(self.action_theme)
        self.menu_help.addAction(self.action_OSL)
        self.menu_help.addAction(self.action_about)

        self.retranslateUi(MainWindow)

        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"Bridgex - Dev2Forge", None))
#if QT_CONFIG(tooltip)
        MainWindow.setToolTip("")
#endif // QT_CONFIG(tooltip)
        self.action_open_file.setText(QCoreApplication.translate("MainWindow", u"Open File", None))
#if QT_CONFIG(shortcut)
        self.action_open_file.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+O", None))
#endif // QT_CONFIG(shortcut)
        self.action_exit.setText(QCoreApplication.translate("MainWindow", u"Exit", None))
#if QT_CONFIG(shortcut)
        self.action_exit.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+W", None))
#endif // QT_CONFIG(shortcut)
        self.action_about.setText(QCoreApplication.translate("MainWindow", u"About", None))
#if QT_CONFIG(shortcut)
        self.action_about.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+M", None))
#endif // QT_CONFIG(shortcut)
        self.action_language.setText(QCoreApplication.translate("MainWindow", u"Language", None))
#if QT_CONFIG(shortcut)
        self.action_language.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+L", None))
#endif // QT_CONFIG(shortcut)
        self.action_theme.setText(QCoreApplication.translate("MainWindow", u"Theme (Soon)", None))
#if QT_CONFIG(shortcut)
        self.action_theme.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+T", None))
#endif // QT_CONFIG(shortcut)
        self.action_OSL.setText(QCoreApplication.translate("MainWindow", u"Open Source Licences", None))
#if QT_CONFIG(shortcut)
        self.action_OSL.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+N", None))
#endif // QT_CONFIG(shortcut)
#if QT_CONFIG(tooltip)
        self.language_btn.setToolTip(QCoreApplication.translate("MainWindow", u"Change language", None))
#endif // QT_CONFIG(tooltip)
        self.language_btn.setText("")
#if QT_CONFIG(shortcut)
        self.language_btn.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+A", None))
#endif // QT_CONFIG(shortcut)
#if QT_CONFIG(tooltip)
        self.explorer_btn.setToolTip(QCoreApplication.translate("MainWindow", u"Open File", None))
#endif // QT_CONFIG(tooltip)
        self.explorer_btn.setText("")
        self.info_md.setText(QCoreApplication.translate("MainWindow", u"Markdown", None))
        self.text_file_selected.setDocumentTitle("")
        self.text_file_selected.setHtml(QCoreApplication.translate("MainWindow", u"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:'Times New Roman'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Gabriola';\"><br /></p></body></html>", None))
        self.info_preview.setText(QCoreApplication.translate("MainWindow", u"Preview", None))
#if QT_CONFIG(tooltip)
        self.convert_btn.setToolTip(QCoreApplication.translate("MainWindow", u"Save file to Markdown (.md)", None))
#endif // QT_CONFIG(tooltip)
        self.convert_btn.setText(QCoreApplication.translate("MainWindow", u"Convert", None))
#if QT_CONFIG(shortcut)
        self.convert_btn.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Enter", None))
#endif // QT_CONFIG(shortcut)
#if QT_CONFIG(tooltip)
        self.label.setToolTip("")
#endif // QT_CONFIG(tooltip)
        self.label.setText(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>\u00a92025 <a href=\"https://www.dev2forge.software\"><span style=\" text-decoration: underline; color:#27bf73;\">Dev2Forge</span></a>. Licensed under the <a href=\"https://github.com/Dev2Forge/bridgex/blob/main/LICENSE\"><span style=\" text-decoration: underline; color:#27bf73;\">MIT License</span></a></p><p><br/></p></body></html>", None))
        self.menu_qt.setTitle(QCoreApplication.translate("MainWindow", u"Menu", None))
        self.menu_settings.setTitle(QCoreApplication.translate("MainWindow", u"Preferences", None))
        self.menu_help.setTitle(QCoreApplication.translate("MainWindow", u"Help", None))
    # retranslateUi

